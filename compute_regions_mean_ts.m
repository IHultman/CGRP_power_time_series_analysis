data_dir = [ ...
  '/mnt', ...
  '/nfs', ...
  '/clasnetappvm', ...
  '/students', ...
  '/ikhultman', ...
  '/Desktop', ...
  '/power_time_series_analysis', ...
  '/CGRP_power_time_series_analysis', ...
  '/data/'];

data_files = split(ls(data_dir) );
data_files = data_files(1:(end-1) );
n_files = length(data_files);

exp_phases = {'Baseline', 'PI2'};
n_phases = length(exp_phases);

brain_regions = { ...
  'Acc', ...
  'BLA', ...
  'CeA', ...
  'MD_thal', ...
  'Po', ...
  'VPM'};

n_regions = length(brain_regions);

expected_nonpower_colnames = [ ...
  {'mouse'}, ...
  {'date'}, ...
  {'freq_band'}, ...
  {'Hz'}, ...
  brain_regions];

power_colnames_prefix = 'Var';

for fx = 1:n_files
  next_file = [data_dir, data_files{fx}];
  next_power_means = load(next_file);

  for px = 1:n_phases
    next_phase = exp_phases{px};
    next_tabl_colnames = next_power_means.(next_phase).Properties.VariableNames;
    [~, nonpow_col_ixs] = sort( ...
      intersect( ...
        next_tabl_colnames, ...
        expected_nonpower_colnames) );
  
    pow_col_ixs = setdiff( ...
      1:size(next_power_means.(next_phase), 2), ...
      nonpow_col_ixs);

    for rx = 1:n_regions
      next_region = brain_regions{rx};
      reg_ixs = next_power_means.(next_phase).(next_region) == 1;
      region_power_means = next_power_means.(next_phase)(reg_ixs,:);
    end
  end
end

