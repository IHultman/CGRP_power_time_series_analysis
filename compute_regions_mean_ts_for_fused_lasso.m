data_dir = [ ...
  '/mnt', ...
  '/nfs', ...
  '/clasnetappvm', ...
  '/students', ...
  '/ikhultman', ...
  '/Desktop', ...
  '/power_time_series_analysis', ...
  '/CGRP_power_time_series_analysis', ...
  '/data/'];

data_files = split(ls(data_dir) );
data_files = data_files(1:(end-1) );
n_files = length(data_files);

exp_phases = {'Baseline', 'Post_injection', 'PI2'};
n_phases = length(exp_phases);

phase_start_ixs = [1, 1802, 3603];

assert(length(phase_start_ixs) == n_phases);

brain_regions = { ...
  'Acc', ...
  'BLA', ...
  'CeA', ...
  'MD_thal', ...
  'Po', ...
  'VPM', ...
  'LPBN', ...
  'RPBN'};

n_regions = length(brain_regions);

expected_nonpower_colnames = [ ...
  {'mouse'}, ...
  {'date'}, ...
  {'freq_band'}, ...
  {'Hz'}, ...
  brain_regions];

power_colnames_prefix = 'Var';

for fx = 1:n_files
  next_file = [data_dir, data_files{fx}];
  next_power_means = load(next_file);
  
  n_power_vec = cellfun( ...
    @(exp_phase) size(next_power_means.(exp_phase), 2), ...
    exp_phases) - length(expected_nonpower_colnames);

  exp_phase_col_ix_table = [ ...
    cumsum([1, n_power_vec(1:(end-1) )]);
    cumsum(n_power_vec)];

  n_tot_power = sum(n_power_vec);
  combined_ts_data = NaN( ...
    size(next_power_means.(exp_phases{1}), 1), ...
    n_tot_power);
  
  for px = 1:n_phases
    next_phase = exp_phases{px};
    next_tabl_colnames = next_power_means.(next_phase).Properties.VariableNames;
    [~, nonpow_col_ixs] = sort( ...
      intersect( ...
        next_tabl_colnames, ...
        expected_nonpower_colnames) );
    
    for vx = 1:numel(expected_nonpower_colnames)
      next_nonpow_var = expected_nonpower_colnames{vx};

      if isa(next_power_means.(exp_phases{1}).(next_nonpow_var), 'string')
        assert( ...
          all( ...
            strcmp( ...
              next_power_means.(exp_phases{1}).(next_nonpow_var), ...
              next_power_means.(next_phase).(next_nonpow_var) )));
      else
        assert( ...
          all( ...
            next_power_means.(exp_phases{1}).(next_nonpow_var) == ...
            next_power_means.(next_phase).(next_nonpow_var) ));
      end
    end

    pow_col_ixs = sort( ...
      setdiff( ...
        1:size(next_power_means.(next_phase), 2), ...
        nonpow_col_ixs) );
  
    col_ax = exp_phase_col_ix_table(1,px);
    col_bx = exp_phase_col_ix_table(2,px);
    combined_ts_data(:,col_ax:col_bx) = table2array( ...
      next_power_means.(next_phase)(:,pow_col_ixs) );
  end
  
  [non_brain_reg_colnames, order_ixs] = setdiff( ...
    expected_nonpower_colnames, ...
    brain_regions);

  non_brain_reg_colnames = non_brain_reg_colnames(order_ixs);
  nonpower_table = next_power_means.(exp_phases{1})(:,non_brain_reg_colnames);
  brain_reg_one_hot = double( ...
    table2array(next_power_means.(exp_phases{1})(:,brain_regions) ));

  brain_reg_ixs = brain_reg_one_hot * (1:n_regions)';
  nonpower_table.region = brain_regions(brain_reg_ixs)';

  combined_ts_data = [nonpower_table, array2table(combined_ts_data)];
  
  [grp_ixs, mouse_id, freq_band, region] = findgroups( ...
    combined_ts_data.mouse, ...
    combined_ts_data.freq_band, ...
    combined_ts_data.region);

  if isrow(grp_ixs)
    grp_ixs = grp_ixs';
  end
  
  if isrow(mouse_id)
    mouse_id = mouse_id';
  end

  if isrow(freq_band)
    freq_band = freq_band';
  end
  
  if isrow(region)
    region = region'; 
  end
  
  combined_ts_colnames = combined_ts_data.Properties.VariableNames;
  [~, nonpow_col_ixs] = sort( ...
    intersect( ...
      combined_ts_colnames, ...
      nonpower_table.Properties.VariableNames) );
  
  pow_col_ixs = sort( ...
    setdiff( ...
      1:size(combined_ts_data, 2), ...
      nonpow_col_ixs) );
  
  group_mean_ts = array2table( ...
    splitapply( ...
      @(pow_mat) mean(pow_mat, 1, 'omitnan'), ...
      table2array(combined_ts_data(:,pow_col_ixs) ), ...
      grp_ixs) );

  mean_power_ts_table = [ ...
    table(mouse_id, freq_band, region), ...
    group_mean_ts];
end

save_filename = [ ...
  '/mnt', ...
  '/nfs', ...
  '/clasnetappvm', ...
  '/students', ...
  '/ikhultman', ...
  '/Desktop', ...
  '/power_time_series_analysis', ...
  '/CGRP_power_time_series_analysis', ...
  '/fused_lasso_data', ...
  '/combined_mean_logpower_ts.csv'];

writetable(mean_power_ts_table, save_filename);

